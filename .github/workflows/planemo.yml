name: Planemo CI

on:
  push:
    branches: [ main ]
    paths:
      - 'tools/**/*.xml'
      - 'environment.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  planemo:
    name: Lint, Test, and Build Containers
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Micromamba environment
      - name: Set up Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          cache-environment: false
          cache-downloads: false
          init-shell: bash

      # Ensure edam-ontology is available
      - name: Install edam-ontology
        shell: bash -l {0}
        run: |
          set -e
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env
          python -m pip install --no-cache-dir --upgrade edam-ontology
          python -c "import edam_ontology; print('edam_ontology import successful')"

      # Lint all Galaxy tools
      - name: Lint all tools
        shell: bash -l {0}
        run: |
          set -e
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env
          echo "Linting Galaxy tools..."
          planemo lint --recursive tools/ || echo "Lint completed with warnings"

      # Run tests (if test-data present)
      - name: Test Galaxy tools
        shell: bash -l {0}
        run: |
          set -e
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env
          echo "Running Planemo tests..."
          planemo test --recursive tools/ || echo "Some tests failed or have no test-data."

      # Log in to Quay.io
      - name: Log in to Quay.io
        env:
          QUAY_USER: ${{ secrets.QUAY_USER }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: |
          echo "$QUAY_PASSWORD" | docker login quay.io -u "$QUAY_USER" --password-stdin
          echo "Successfully logged into quay.io as $QUAY_USER"

      # Build and push GalaxyTrakr containers
      - name: Build and push containers to Quay.io
        shell: bash -l {0}
        env:
          QUAY_USER: ${{ secrets.QUAY_USER }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: |
          set -e
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env

          echo "Starting container registration for all tools..."
          planemo container_register \
            --recursive \
            --mulled_namespace galaxytrakr \
            --no_pull_request \
            --conda_channels bioconda,conda-forge \
            tools/ || echo "One or more container_register runs may have failed"

          echo "Searching for built images..."
          TAR_PATHS=$(find ~/.planemo/involucro/dist -type f -name "*.tar" || true)
          if [ -z "$TAR_PATHS" ]; then
            echo "No image tarballs found. Skipping Docker push."
          else
            for tar in $TAR_PATHS; do
              echo "Loading image tarball: $tar"
              docker load < "$tar"
            done

            docker images | grep "galaxytrakr" || echo "No local images found after loading."

            for image in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep "galaxytrakr" || true); do
              echo "Pushing $image ..."
              docker push "$image" || echo "Push failed for $image"
            done
          fi

      # CI Summary
      - name: Summary
        shell: bash -l {0}
        run: |
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env
          echo "Planemo version:"
          planemo --version
          echo "Planemo CI complete"

