name: Planemo CI

on:
  push:
    branches: [ main ]
    paths:
      - 'tools/**/*.xml'
      - 'environment.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  planemo:
    name: Lint, Test, and Build Containers
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Micromamba environment
      - name: Set up Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          cache-environment: false
          cache-downloads: false
          init-shell: bash

      # Ensure edam-ontology is available
      - name: Install edam-ontology
        shell: bash -l {0}
        run: |
          set -e
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env
          python -m pip install --no-cache-dir --upgrade edam-ontology
          python -c "import edam_ontology; print('edam_ontology import successful')"

      # Lint all Galaxy tools
      - name: Lint all tools
        shell: bash -l {0}
        run: |
          set -e
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env
          planemo lint --recursive tools/ || echo "Lint completed with warnings"

      # Run tests (if test-data present)
      - name: Test Galaxy tools
        shell: bash -l {0}
        run: |
          set -e
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env
          planemo test --recursive tools/ || echo "Some tests failed or have no test-data."

      # Log in to Quay.io
      - name: Log in to Quay.io
        env:
          QUAY_USER: ${{ secrets.QUAY_USER }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: |
          echo "$QUAY_PASSWORD" | docker login quay.io -u "$QUAY_USER" --password-stdin
          echo "Successfully logged into quay.io as $QUAY_USER"

      # Build and push containers with planemo mull
      - name: Build and push containers
        shell: bash -l {0}
        env:
          QUAY_USER: ${{ secrets.QUAY_USER }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: |
          set -e
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env

          TOOL_XMLS=$(find tools -mindepth 2 -maxdepth 4 -type f -name "*.xml" \
            ! -name "macros*.xml" \
            ! -name "data_manager_conf.xml" \
            ! -path "*/test-data/*")

          echo "Discovered tool XMLs:"
          echo "$TOOL_XMLS"

          for xml in $TOOL_XMLS; do
            echo "----------------------------------------"
            echo "Building container for: $xml"
            echo "----------------------------------------"

            planemo mull \
              --mulled_namespace galaxytrakr \
              --conda_channels bioconda,conda-forge \
              "$xml" || { echo "Planemo mull failed for $xml"; continue; }

            # Find and load the generated image tar
            TAR_PATH=$(find ~/.planemo/involucro/dist -type f -name "*.tar" | tail -n 1 || true)
            if [ -f "$TAR_PATH" ]; then
              echo "Loading image tarball: $TAR_PATH"
              docker load < "$TAR_PATH"
            else
              echo "No tarball found for $xml, skipping push."
              continue
            fi

            # Extract the image name from the tar metadata
            IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "galaxytrakr" | head -n 1 || true)
            if [ -n "$IMAGE" ]; then
              echo "Pushing image $IMAGE..."
              docker push "$IMAGE" || echo "Push failed for $IMAGE"
            else
              echo "No image found to push for $xml"
            fi
          done

      # CI Summary
      - name: Summary
        shell: bash -l {0}
        run: |
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate planemo-env
          planemo --version
          echo "Planemo CI complete"

