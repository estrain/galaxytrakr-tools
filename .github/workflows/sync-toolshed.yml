name: Sync Galaxy Tools to Mercurial Tool Shed

on:
  push:
    branches: [main]
    paths:
      - 'tools/**'
  pull_request:
    branches: [main]
    paths:
      - 'tools/**'
  workflow_dispatch:

jobs:
  sync-tools:
    name: Sync Updated Mercurial ToolShed Repos
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # needed for git diff to see last commit

      - name: Install Mercurial
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y mercurial rsync curl

      - name: Identify Changed Tool Directories
        id: changes
        run: |
          set -euo pipefail
          echo "Detecting changed Galaxy tools..."
          CHANGED=$(git diff --name-only HEAD^ HEAD | grep '^tools/' || true)
          echo "$CHANGED" | sed 's|/[^/]*$||' | sort -u | uniq > changed_dirs.txt

          if [[ -s changed_dirs.txt ]]; then
            echo "Detected changed tool directories:"
            cat changed_dirs.txt
            echo "tool_dirs=$(paste -sd ' ' changed_dirs.txt)" >> "$GITHUB_OUTPUT"
          else
            echo "No changed tools detected."
            echo "tool_dirs=" >> "$GITHUB_OUTPUT"
          fi

      - name: Sync Tools to Tool Shed
        if: steps.changes.outputs.tool_dirs != ''
        env:
          HG_USER: ${{ secrets.HG_USER }}
          HG_PASS: ${{ secrets.HG_PASS }}
          HG_EMAIL: ${{ secrets.HG_EMAIL }}
        run: |
          set -euo pipefail

          HG_USER="${HG_USER:-estrain}"
          HG_PASS="${HG_PASS:-}"
          HG_EMAIL="${HG_EMAIL:-${HG_USER}@example.com}"
          [[ -z "$HG_PASS" ]] && { echo "Error: HG_PASS not set"; exit 1; }

          HG_BASE_URL="https://${HG_USER}:${HG_PASS}@opentrakr.org/repos/${HG_USER}"

          echo "Starting sync for changed tool repos..."
          for dir in ${{ steps.changes.outputs.tool_dirs }}; do
            TOOL_NAME=$(basename "$dir")
            REPO_URL="${HG_BASE_URL}/${TOOL_NAME}"
            TEMP_DIR=$(mktemp -d)

            echo ">>> Syncing $TOOL_NAME ..."

            # Check if remote repo exists
            if ! curl -fs --head "${REPO_URL}" >/dev/null 2>&1; then
              echo "   Skipping $TOOL_NAME â€” remote repo not found at ${REPO_URL}"
              rm -rf "$TEMP_DIR"
              continue
            fi

            # Clone the remote Mercurial repo fresh
            echo "   Cloning ${REPO_URL}..."
            if ! hg clone -q "${REPO_URL}" "$TEMP_DIR"; then
              echo "   Failed to clone $REPO_URL, initializing empty repo."
              hg init "$TEMP_DIR"
            fi

            # Copy updated tool contents from GitHub workspace into the clone
            rsync -av --delete "${dir}/" "$TEMP_DIR/" --exclude '.hg'

            # Commit + push if there are any changes
            cd "$TEMP_DIR"
            if [[ -n "$(hg status)" ]]; then
              echo "   [$TOOL_NAME] committing and pushing changes..."
              hg addremove -q
              hg commit -m "Auto-sync from GitHub $(date +%Y-%m-%d)" -u "${HG_USER} <${HG_EMAIL}>" -q || true
              hg push -q || { echo "   Warning: Push failed for $TOOL_NAME"; }
            else
              echo "   [$TOOL_NAME] no changes to commit."
            fi

            cd - >/dev/null
            rm -rf "$TEMP_DIR"
          done

          echo "All changed Mercurial tool repositories synchronized successfully."
